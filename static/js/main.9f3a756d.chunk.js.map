{"version":3,"sources":["QuoteBox.js","App.js","index.js"],"names":["variants","initial","x","opacity","animate","transition","type","duration","QuoteBox","colors","useState","quote","setQuote","color","setColor","isPending","setIsPending","error","setError","useEffect","fetch","then","res","json","data","Math","floor","random","length","catch","e","style","backgroundColor","className","motion","div","id","text","author","role","title","href","rel","target","class","button","onClick","whileHover","scale","textShadow","boxShadow","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAGMA,EAAW,CACbC,QAAS,CACLC,EAAG,QACHC,QAAQ,GAEZC,QAAS,CACLF,EAAE,EACFC,QAAS,EACTE,WAAY,CAACC,KAAM,QAASC,SAAS,OA6F9BC,EAxFE,WACb,IAAIC,EAAS,CACT,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGJ,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,WAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0BN,oBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KA8BA,OAdAC,qBAAU,WACNC,MAAM,+BACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAM,SAAAG,GAECZ,EAASY,EAAKC,KAAKC,MAAMD,KAAKE,SAASH,EAAKI,UAC5CZ,GAAa,MAEhBa,OAAM,SAAAC,GACHZ,GAAS,GACTF,GAAa,QAEtB,IAGC,qBAAKe,MAAO,CAACC,gBAAiBnB,GAAQoB,UAAU,UAAhD,SACI,eAACC,EAAA,EAAOC,IAAR,CACIC,GAAG,YACHpC,SAAUA,EACVC,QAAQ,UACRG,QAAQ,UAJZ,UAMKa,GAAS,0DACTF,GAAa,6CACd,oBAAIgB,MAAO,CAAClB,MAAOA,GAAQuB,GAAG,OAA9B,SAAsCzB,EAAM0B,OAC5C,oBAAGD,GAAG,SAAN,iBAAoBzB,EAAM2B,UAC1B,sBAAKL,UAAU,OAAf,UACI,mBACIG,GAAG,cACH9B,KAAK,SACLiC,KAAK,SACLC,MAAM,mBACNC,KAAK,+DACLC,IAAI,aACJC,OAAO,SAPX,SAQA,mBAAGC,MAAM,uBAAT,yBAEA,cAACV,EAAA,EAAOW,OAAR,CAAed,MAAO,CAACC,gBAAiBnB,GAAQuB,GAAG,YAAYU,QAnD3D,WAChB1B,MAAM,+BACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAM,SAAAG,GAAI,OACPZ,EAASY,EAAKC,KAAKC,MAAMD,KAAKE,SAASH,EAAKI,aAE/CC,OAAM,SAAAC,GACHZ,GAAS,GACTF,GAAa,MAGjBF,EAASL,EAAOgB,KAAKC,MAAMD,KAAKE,SAASlB,EAAOmB,WAyCnCmB,WAAY,CACTC,MAAO,IACPC,WAAY,+BACZC,UAAW,gCAJf,gCC3ELC,MARf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACA,cAAC,EAAD,OCFJmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f3a756d.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst variants = {\r\n    initial: {\r\n        x: '400px',\r\n        opacity:0\r\n    },\r\n    animate: {\r\n        x:0,\r\n        opacity: 1,\r\n        transition: {type: 'tween', duration:1.5}\r\n    }\r\n}\r\n\r\n\r\nconst QuoteBox = () => {\r\n    var colors = [\r\n        '#16a085',\r\n        '#27ae60',\r\n        '#2c3e50',\r\n        '#f39c12',\r\n        '#e74c3c',\r\n        '#9b59b6',\r\n        '#FB6964',\r\n        '#342224',\r\n        '#472E32',\r\n        '#BDBB99',\r\n        '#77B1A9',\r\n        '#73A857'\r\n      ];\r\n\r\n    const [quote, setQuote] = useState([]);\r\n    const [color, setColor] = useState('#73A857');\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        fetch(\"https://type.fit/api/quotes\")\r\n        .then(res => res.json())\r\n        .then( data =>\r\n            setQuote(data[Math.floor(Math.random()*data.length)])\r\n        )\r\n        .catch(e => {\r\n            setError(true)\r\n            setIsPending(false)\r\n        })\r\n\r\n        setColor(colors[Math.floor(Math.random()*colors.length)])\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://type.fit/api/quotes\")\r\n        .then(res => res.json())\r\n        .then( data =>\r\n            {\r\n                setQuote(data[Math.floor(Math.random()*data.length)]);\r\n                setIsPending(false)\r\n            })\r\n            .catch(e => {\r\n                setError(true)\r\n                setIsPending(false)\r\n            })\r\n    }, []);\r\n\r\n    return ( \r\n        <div style={{backgroundColor: color}} className=\"wrapper\">\r\n            <motion.div \r\n                id=\"quote-box\"\r\n                variants={variants}\r\n                initial=\"initial\"\r\n                animate=\"animate\"\r\n            >\r\n                {error && <div>couldn't fetch the data</div>}\r\n                {isPending && <div>Loading...</div>}\r\n                <h1 style={{color: color}} id=\"text\">{quote.text}</h1>\r\n                <p id=\"author\">-by {quote.author}</p>\r\n                <div className=\"flex\">\r\n                    <a \r\n                        id=\"tweet-quote\" \r\n                        type=\"button\" \r\n                        role=\"button\" \r\n                        title=\"Share on twitter\"\r\n                        href=\"https://twitter.com/intent/tweet?url=https%3A%2F%2Fparse.com\"\r\n                        rel=\"noreferrer\"\r\n                        target=\"_blank\">\r\n                    <i class=\"fab fa-2x fa-twitter\"> Tweet it</i>\r\n                    </a>\r\n                    <motion.button style={{backgroundColor: color}} id=\"new-quote\" onClick={handleClick} \r\n                     whileHover={{ \r\n                        scale: 1.2, \r\n                        textShadow: \"0px 0px 8px rgb(255,255,255)\",\r\n                        boxShadow: \"0px 0px 8px rgb(255,255,255)\",\r\n                      }}\r\n                      \r\n                    >\r\n                    New Quote\r\n                    </motion.button>\r\n                </div>\r\n            </motion.div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default QuoteBox;","import QuoteBox from \"./QuoteBox\";\nimport {useEffect, useState} from \"react\"\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <QuoteBox />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}